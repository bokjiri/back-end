# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ main, dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.14.2]
        redis-version: [4.0.9]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start Redis
      uses: supercharge/redis-github-action@1.4.0
      with:
        redis-version: ${{ matrix.redis-version }}

    - run: npm ci
    - name: Create .env file
      shell: bash
      env:
        KAKAO_ID: ${{ secrets.KAKAO_ID }}
        REDISURL: ${{ secrets.REDISURL }}
        ACCESSKEY: ${{ secrets.ACCESSKEY }}
        REFRESHKEY: ${{ secrets.REFRESHKEY }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
        COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
        DBID: ${{ secrets.DBID }}
        DBPW: ${{ secrets.DBPW }}
        MAIL_ID: ${{ secrets.MAIL_ID }}
        MAIL_PW: ${{ secrets.MAIL_PW }}
        TEST: ${{ secrets.TEST }}
      run: |
          touch .env
          echo KAKAO_ID: ${{ secrets.KAKAO_ID }} >> .env
          echo REDISURL: ${{ secrets.REDISURL }} >> .env
          echo ACCESSKEY: ${{ secrets.ACCESSKEY }} >> .env
          echo REFRESHKEY: ${{ secrets.REFRESHKEY }} >> .env
          echo SESSION_SECRET: ${{ secrets.SESSION_SECRET }} >> .env
          echo COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }} >> .env
          echo DBID: ${{ secrets.DBID }} >> .env
          echo DBPW: ${{ secrets.DBPW }} >> .env
          echo MAIL_ID: ${{ secrets.MAIL_ID }} >> .env
          echo MAIL_PW: ${{ secrets.MAIL_PW }} >> .env
          echo TEST: ${{ secrets.TEST }} >> .env
          cat .env
    - run: npm run build --if-present
    - name:
      # env:
      #   KAKAO_ID: ${{ secrets.KAKAO_ID }}
      #   REDISURL: ${{ secrets.REDISURL }}
      #   ACCESSKEY: ${{ secrets.ACCESSKEY }}
      #   REFRESHKEY: ${{ secrets.REFRESHKEY }}
      #   SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      #   COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
      #   DBID: ${{ secrets.DBID }}
      #   DBPW: ${{ secrets.DBPW }}
      #   MAIL_ID: ${{ secrets.MAIL_ID }}
      #   MAIL_PW: ${{ secrets.MAIL_PW }}
      run: npm test